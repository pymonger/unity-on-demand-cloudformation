AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy an EC2 instance into an existing VPC for deployment of Unity"
Metadata:
  QuickStartDocumentation:
    EntrypointName: "Launch into an existing VPC"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Basic configuration
        Parameters:
          - VPCID
          - PrivateSubnetID
          - KeyPairName
          - InstanceType
    ParameterLabels:
      VPCID:
        default: VPC ID
      PrivateSubnetID:
        default: Private subnet ID
      KeyPairName:
        default: SSH key name
      InstanceType:
        default: EC2 instance type

Parameters:
  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: ID of your existing VPC (e.g., vpc-0343606e).
  PrivateSubnetID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the private subnet in an Availability Zone of your existing VPC (e.g., subnet-fe9a8b32).
  KeyPairName:
    Description: Name of an existing key pair, which allows you to securely connect to your instance after it launches.
    Type: "AWS::EC2::KeyPair::KeyName"
  InstanceType:
    AllowedValues:
    - c3.xlarge
    - c4.xlarge
    - c5.xlarge
    - c6i.xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: c6i.xlarge
    Description: EC2 instance type
    Type: String

Mappings:
  AWSRegion2AMI:
    us-east-1:
      HVM64: ami-06e19b474320acfa8
    us-east-2:
      HVM64: ami-0a847dcd32f366120
    us-west-1:
      HVM64: ami-0b7451f34d8d9447a
    us-west-2:
      HVM64: ami-0f03d969d430caf73

Resources:
  InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
        # TODO: need to generalize for JPL, MCP and normal AWS accounts; currently these are specific to MCP
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/mcp-tenantOperator"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/DatalakeKinesisPolicy"
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/McpToolsAccessPolicy"
      PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/mcp-tenantOperator"
  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref InstanceRole

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [AWSRegion2AMI, !Ref 'AWS::Region', HVM64]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref PrivateSubnetID
      EbsOptimized: true
      SecurityGroupIds: 
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      Tags: 
        - Key: "Name"
          Value: "unity-deployer-instance"

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "security group for unity-deployer-instance"
      GroupName: "unity-deployer-instance-sg"
      VpcId: !Ref VPCID
      SecurityGroupIngress: 
        - CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
      SecurityGroupEgress: 
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
